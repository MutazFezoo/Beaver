apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

android {

    compileSdkVersion 27

    defaultConfig {
        applicationId 'net.samystudio.beaver'
        minSdkVersion 19
        targetSdkVersion 27
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "$versionMajor.$versionMinor.$versionPatch"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        buildConfigField('String', 'FULL_VERSION_NAME', "\"$versionName.$versionCode\"")
        resValue 'string', 'application_id', applicationId
    }

    signingConfigs {
        release {
            keyAlias 'beaver'
            keyPassword 'beaver'
            storeFile file('keystore.jks')
            storePassword 'beaver'
        }
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            manifestPlaceholders = [crashlyticsEnabled: false]
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [crashlyticsEnabled: true]
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    androidExtensions {
        experimental = true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def sep = '_'
            def version = variant.versionName
            def build = variant.versionCode
            outputFileName = "${rootProject.name}${sep}" +
                    "${variant.buildType.name}${sep}" +
                    "${version}${sep}" +
                    "build${sep}${build}.apk"
        }
    }

    configurations.all { config ->
        if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
            config.resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'com.squareup.leakcanary' &&
                        details.requested.name == 'leakcanary-android') {
                    details.useTarget(
                            group: details.requested.group,
                            name: 'leakcanary-android-no-op',
                            version: details.requested.version
                    )
                }
            }
        }
    }
}

dependencies {

    // kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.31'
    implementation 'androidx.core:core-ktx:0.3'

    // support
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // architecture components
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt 'android.arch.lifecycle:compiler:1.1.1'
    implementation 'android.arch.lifecycle:reactivestreams:1.1.1'

    // firebase
    implementation 'com.google.firebase:firebase-core:15.0.2'
    implementation 'com.google.firebase:firebase-appindexing:15.0.1'
    implementation 'com.google.firebase:firebase-perf:15.2.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.3'

    // dagger
    implementation 'com.google.dagger:dagger:2.15'
    implementation 'com.google.dagger:dagger-android:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.15'
    kapt 'com.google.dagger:dagger-compiler:2.15'
    //kapt      'com.google.dagger:dagger-android-processor:2.15'
    implementation 'com.github.IVIanuu.Contributer:contributer-conductor:1.0.0'
    kapt 'com.github.IVIanuu.Contributer:contributer-processor:1.0.0'

    // conductor
    implementation 'com.bluelinelabs:conductor:2.1.4'
    implementation 'com.bluelinelabs:conductor-support:2.1.4'
    implementation 'com.bluelinelabs:conductor-archlifecycle:0.1.1'

    // reactive
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'

    // network
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // debug
    implementation 'com.jakewharton.timber:timber:4.6.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // misc
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.evernote:android-state:1.2.1'
    kapt 'com.evernote:android-state-processor:1.2.1'
    implementation 'com.squareup.picasso:picasso:3.0.0-SNAPSHOT'

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.17.0'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
    androidTestImplementation 'org.mockito:mockito-android:2.17.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

apply plugin: 'com.google.gms.google-services'