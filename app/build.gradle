apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'androidx.navigation.safeargs'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

android {

    compileSdkVersion 28

    defaultConfig {
        applicationId 'net.samystudio.beaver'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "$versionMajor.$versionMinor.$versionPatch"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        buildConfigField('String', 'FULL_VERSION_NAME', "\"$versionName.$versionCode\"")
        resValue 'string', 'application_id', applicationId
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'beaver'
            keyPassword 'beaver'
            storeFile file('keystore.jks')
            storePassword 'beaver'
        }
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            manifestPlaceholders = [crashlyticsEnabled: false]
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [crashlyticsEnabled: true]
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    androidExtensions {
        experimental = true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def sep = '_'
            def version = variant.versionName
            def build = variant.versionCode
            outputFileName = "${rootProject.name}${sep}" +
                    "${variant.buildType.name}${sep}" +
                    "${version}${sep}" +
                    "build${sep}${build}.apk"
        }
    }

    configurations.all { config ->
        if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
            config.resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'com.squareup.leakcanary' &&
                        details.requested.name == 'leakcanary-android') {
                    details.useTarget(
                            group: details.requested.group,
                            name: 'leakcanary-android-no-op',
                            version: details.requested.version
                    )
                }
            }
        }
    }
}

dependencies {

    // kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.2.61'

    // android
    implementation 'androidx.core:core:1.0.0-rc02'
    implementation 'androidx.core:core-ktx:1.0.0-rc02'
    implementation 'androidx.appcompat:appcompat:1.0.0-rc02'
    //implementation 'com.google.android.material:material:1.0.0-alpha3'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-rc01'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0-rc01'
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha05'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0-alpha05'

    // firebase
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.google.firebase:firebase-appindexing:16.0.1'
    implementation 'com.google.firebase:firebase-perf:16.1.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'

    // dagger
    implementation 'com.google.dagger:dagger:2.16'
    implementation 'com.google.dagger:dagger-android:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    kapt 'com.google.dagger:dagger-android-processor:2.16'

    // reactive
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'

    // network
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // debug
    implementation 'com.jakewharton.timber:timber:4.7.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    // misc
    //implementation 'com.jakewharton:butterknife:9.0.0-SNAPSHOT'
    //kapt 'com.jakewharton:butterknife-compiler:9.0.0-SNAPSHOT'
    //implementation 'com.evernote:android-state:1.3.1'
   // kapt 'com.evernote:android-state-processor:1.3.1'
    implementation 'com.squareup.picasso:picasso:3.0.0-SNAPSHOT'

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.17.0'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
    androidTestImplementation 'org.mockito:mockito-android:2.17.0'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    androidTestImplementation 'android.arch.navigation:navigation-testing-ktx:1.0.0-alpha05'
}

apply plugin: 'com.google.gms.google-services'